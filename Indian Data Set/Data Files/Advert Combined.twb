<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='AdvertCombined' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Channel Advt' inline='true' name='textscan.0pwphad0b2mfz412wl39v0w1r0p4' version='9.3'>
      <connection class='textscan' directory='D:/Projects/Indian Data Set/Data Files' filename='Channel Advt.csv' password='' server=''>
        <relation name='Channel Advt.csv' table='[Channel Advt#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='S.No' ordinal='1' />
            <column datatype='string' name='Name of Broadcaster' ordinal='2' />
            <column datatype='string' name='Name of channel' ordinal='3' />
            <column datatype='real' name=' Avg duration per hour of Advt during peak hour in min' ordinal='4' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>S.No</remote-name>
            <remote-type>20</remote-type>
            <local-name>[S.No]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>S.No</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name of Broadcaster</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name of Broadcaster]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>Name of Broadcaster</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name of channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name of channel]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>Name of channel</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> Avg duration per hour of Advt during peak hour in min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ Avg duration per hour of Advt during peak hour in min]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias> Avg duration per hour of Advt during peak hour in min</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg duration per hour of Advt during peak hour in min' datatype='real' name='[ Avg duration per hour of Advt during peak hour in min]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name of channel]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Vinyas\Documents\My Tableau Repository\Datasources\Channel Advt.tde' schema='Extract' tablename='Extract' update-time='05/19/2016 04:53:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='149' timestamp-start='2016-05-19 16:53:08.212' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name> Avg duration per hour of Advt during peak hour in min</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ Avg duration per hour of Advt during peak hour in min]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias> Avg duration per hour of Advt during peak hour in min</remote-alias>
              <ordinal>0</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2185.4799999999987</statistic>
                <statistic aggregation='Avg' datatype='real'>14.667651006711401</statistic>
                <statistic aggregation='Min' datatype='real'>12.130000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>23.989999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1264004572065209</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1192528724209443</statistic>
                <statistic aggregation='Var' datatype='real'>4.5215789044081021</statistic>
                <statistic aggregation='VarP' datatype='real'>4.491232737264423</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>32725.051600000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>149</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11175.0</statistic>
                <statistic aggregation='Avg' datatype='real'>75.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>149</statistic>
                <statistic aggregation='Stdev' datatype='real'>43.156691254080172</statistic>
                <statistic aggregation='StdevP' datatype='real'>43.011626335213137</statistic>
                <statistic aggregation='Var' datatype='real'>1862.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1850.0</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='Median' datatype='integer'>75</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1113775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name of Broadcaster</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name of Broadcaster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name of Broadcaster</remote-alias>
              <ordinal>2</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>39</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;9X Media Pvt. Ltd.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoom Entertainment Network Ltd&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;STAR India Pvt Ltd&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name of channel</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name of channel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name of channel</remote-alias>
              <ordinal>3</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>149</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; Suvarna&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoom&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>149.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>149.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>S.No</remote-name>
              <remote-type>16</remote-type>
              <local-name>[S.No]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>S.No</remote-alias>
              <ordinal>5</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>121</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7787.0</statistic>
                <statistic aggregation='Avg' datatype='real'>52.261744966442954</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>121</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.63302231541298</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.509885757544048</statistic>
                <statistic aggregation='Var' datatype='real'>1341.9783239615454</statistic>
                <statistic aggregation='VarP' datatype='real'>1332.9717580289175</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>605575.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[ Avg duration per hour of Advt during peak hour in min]' included-values='in-range'>
          <min>12.130000000000001</min>
          <max>23.989999999999998</max>
        </filter>
        <filter class='categorical' column='[Name of channel]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Name of channel]' member='&quot; Suvarna&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; Pictures&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; Pictures HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X Jalwa&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X Jhakaas&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X M&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X Tashan&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;AAJ TAK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ABP Ananda&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ABP Majha&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ADITHYA&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Animal Planet&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Asianet &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Asianet Plus&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;AXN&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;B4U Movies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;BIG MAGIC Ganga&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Bindaas Play&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Bindass&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Cartoon Network &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Channel [V]&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CHINTU TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CHUTTI TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CNBC TV 18 Prime HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CNBC TV18&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CNN-IBN&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;COLORS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Bangla&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Guarati&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;COLORS HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Kannada&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Marathi&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Oriya&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;COMEDY CENTRAL&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;DILLI AAJTAK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Channel&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Channel Tamil&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Kids&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Science&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Turbo&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;E24 &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Epic TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Bihar&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Gujarati&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Harayana/ HP&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Kannada&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV M.P.&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Rajasthan&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Telugu &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Urdu&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV2 A.P.&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Fox Fx&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Fox Life&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Fox Life HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI COMEDY&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI MOVIES&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI MUSICS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;HBO&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;HEDLINES TODAY&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;HISTORY TV18&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Hungama&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;IBN Lokmat&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ID Investigation Discovery&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;K TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;K TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;KIRAN&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;KOCHU TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;KUSHI TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Life OK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAA GOLD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAA MOVIES&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAA MUSIC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAATV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAX 2&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAX TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MEGA MUSIQ&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MIX&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Movies Now&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Movies Now+&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Movies OK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MTV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;National Geographic Chnl&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;NDTV 24x7&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;NDTV Good Times&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;NICK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;PAL&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;PIX&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;PIX HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;POGO&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Raj Digital Plus&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Raj TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Romedy Now&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SAB TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Sahara One&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SONIC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SONY AATH&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SONY TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Jalsha&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Movies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Movies HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR PluS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Plus HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Pravah&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR World&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR World HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN MUSIC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN MUSIC HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN NEWS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SURYA MUSICS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SURYA TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Suvarna Plus&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;TEZ&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Times Now&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;TLC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA MOVIES&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA MUSICS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA NEWS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UTV Action&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UTV Movies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;VH1&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Vijay TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;WB &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Action Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Bangla&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Bangla Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE BUSINESS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Cafe&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Classic Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE ETC Bollywood&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE Kannada&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Marathi&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Marudhara&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE NEWS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Punjab Haryana Himachal&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Studio&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Studio HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Talkies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE Telugu&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zing&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zoom&quot;' />
          </groupfilter>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.455969' measure-ordering='alphabetic' measure-percentage='0.544031' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Channel Advt' name='textscan.0pwphad0b2mfz412wl39v0w1r0p4' />
          </datasources>
          <datasource-dependencies datasource='textscan.0pwphad0b2mfz412wl39v0w1r0p4'>
            <column caption='Avg duration per hour of Advt during peak hour in min' datatype='real' name='[ Avg duration per hour of Advt during peak hour in min]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name of channel]' role='dimension' type='nominal' />
            <column-instance column='[Name of channel]' derivation='None' name='[none:Name of channel:nk]' pivot='key' type='nominal' />
            <column-instance column='[ Avg duration per hour of Advt during peak hour in min]' derivation='Sum' name='[sum: Avg duration per hour of Advt during peak hour in min:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' max='20.989999999999998' min='12.130000000000001' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' />
              <color column='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' />
              <text column='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[none:Name of channel:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='normal' />
                <format attr='font-size' value='8' />
                <format attr='font-family' value='Calibri Light' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg advert time &#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='8702' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='19360' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='8702' />
            <zone h='71228' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='28062'>
              <flipboard active-id='1' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Sheet 1' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='32'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[none:Name of channel:nk]</field>
            <field>[textscan.0uhm4wf0ngkban19lp0mr1emn9pz].[none:Name of Pay Channel (Non News):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='3' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
