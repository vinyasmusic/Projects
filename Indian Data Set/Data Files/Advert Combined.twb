<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='AdvertCombined' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Channel Advt' inline='true' name='textscan.0pwphad0b2mfz412wl39v0w1r0p4' version='9.3'>
      <connection class='textscan' directory='D:/Projects/Indian Data Set/Data Files' filename='Channel Advt.csv' password='' server=''>
        <relation name='Channel Advt.csv' table='[Channel Advt#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='S.No' ordinal='1' />
            <column datatype='string' name='Name of Broadcaster' ordinal='2' />
            <column datatype='string' name='Name of channel' ordinal='3' />
            <column datatype='real' name=' Avg duration per hour of Advt during peak hour in min' ordinal='4' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>S.No</remote-name>
            <remote-type>20</remote-type>
            <local-name>[S.No]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>S.No</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name of Broadcaster</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name of Broadcaster]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>Name of Broadcaster</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name of channel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name of channel]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias>Name of channel</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> Avg duration per hour of Advt during peak hour in min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ Avg duration per hour of Advt during peak hour in min]</local-name>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias> Avg duration per hour of Advt during peak hour in min</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Channel Advt.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg duration per hour of Advt during peak hour in min' datatype='real' name='[ Avg duration per hour of Advt during peak hour in min]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name of channel]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Vinyas\Documents\My Tableau Repository\Datasources\Channel Advt.tde' schema='Extract' tablename='Extract' update-time='05/19/2016 04:53:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='149' timestamp-start='2016-05-19 16:53:08.212' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name> Avg duration per hour of Advt during peak hour in min</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ Avg duration per hour of Advt during peak hour in min]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias> Avg duration per hour of Advt during peak hour in min</remote-alias>
              <ordinal>0</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2185.4799999999987</statistic>
                <statistic aggregation='Avg' datatype='real'>14.667651006711401</statistic>
                <statistic aggregation='Min' datatype='real'>12.130000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>23.989999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1264004572065209</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1192528724209443</statistic>
                <statistic aggregation='Var' datatype='real'>4.5215789044081021</statistic>
                <statistic aggregation='VarP' datatype='real'>4.491232737264423</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>32725.051600000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>149</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11175.0</statistic>
                <statistic aggregation='Avg' datatype='real'>75.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>149</statistic>
                <statistic aggregation='Stdev' datatype='real'>43.156691254080172</statistic>
                <statistic aggregation='StdevP' datatype='real'>43.011626335213137</statistic>
                <statistic aggregation='Var' datatype='real'>1862.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1850.0</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='Median' datatype='integer'>75</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1113775.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name of Broadcaster</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name of Broadcaster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name of Broadcaster</remote-alias>
              <ordinal>2</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>39</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;9X Media Pvt. Ltd.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoom Entertainment Network Ltd&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;STAR India Pvt Ltd&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name of channel</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name of channel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name of channel</remote-alias>
              <ordinal>3</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>149</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; Suvarna&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoom&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>4</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>149.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>149.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>S.No</remote-name>
              <remote-type>16</remote-type>
              <local-name>[S.No]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>S.No</remote-alias>
              <ordinal>5</ordinal>
              <family>Channel Advt.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>121</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7787.0</statistic>
                <statistic aggregation='Avg' datatype='real'>52.261744966442954</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>121</statistic>
                <statistic aggregation='Stdev' datatype='real'>36.63302231541298</statistic>
                <statistic aggregation='StdevP' datatype='real'>36.509885757544048</statistic>
                <statistic aggregation='Var' datatype='real'>1341.9783239615454</statistic>
                <statistic aggregation='VarP' datatype='real'>1332.9717580289175</statistic>
                <statistic aggregation='Count' datatype='integer'>149</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>605575.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[ Avg duration per hour of Advt during peak hour in min]' included-values='in-range'>
          <min>12.130000000000001</min>
          <max>23.989999999999998</max>
        </filter>
        <filter class='categorical' column='[Name of channel]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Name of channel]' member='&quot; Suvarna&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; Pictures&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; Pictures HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;&amp; TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X Jalwa&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X Jhakaas&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X M&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;9X Tashan&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;AAJ TAK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ABP Ananda&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ABP Majha&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ADITHYA&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Animal Planet&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Asianet &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Asianet Plus&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;AXN&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;B4U Movies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;BIG MAGIC Ganga&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Bindaas Play&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Bindass&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Cartoon Network &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Channel [V]&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CHINTU TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CHUTTI TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CNBC TV 18 Prime HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CNBC TV18&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;CNN-IBN&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;COLORS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Bangla&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Guarati&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;COLORS HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Kannada&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Marathi&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Colors Oriya&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;COMEDY CENTRAL&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;DILLI AAJTAK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Channel&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Channel Tamil&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Kids&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Science&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Discovery Turbo&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;E24 &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Epic TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Bihar&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Gujarati&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Harayana/ HP&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Kannada&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV M.P.&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Rajasthan&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Telugu &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV Urdu&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ETV2 A.P.&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Fox Fx&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Fox Life&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Fox Life HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI COMEDY&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI MOVIES&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI MUSICS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;GEMINI TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;HBO&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;HEDLINES TODAY&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;HISTORY TV18&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Hungama&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;IBN Lokmat&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ID Investigation Discovery&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;K TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;K TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;KIRAN&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;KOCHU TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;KUSHI TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Life OK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAA GOLD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAA MOVIES&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAA MUSIC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAATV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAX 2&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MAX TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MEGA MUSIQ&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MIX&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Movies Now&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Movies Now+&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Movies OK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;MTV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;National Geographic Chnl&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;NDTV 24x7&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;NDTV Good Times&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;NICK&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;PAL&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;PIX&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;PIX HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;POGO&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Raj Digital Plus&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Raj TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Romedy Now&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SAB TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Sahara One&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SONIC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SONY AATH&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SONY TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Jalsha&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Movies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Movies HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR PluS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Plus HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR Pravah&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR World&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;STAR World HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN MUSIC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN MUSIC HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN NEWS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SUN TV HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SURYA MUSICS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;SURYA TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Suvarna Plus&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;TEZ&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Times Now&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;TLC&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA MOVIES&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA MUSICS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA NEWS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UDAYA TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UTV Action&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;UTV Movies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;VH1&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Vijay TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;WB &quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Action Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Bangla&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Bangla Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE BUSINESS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Cafe&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Classic Cinema&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE ETC Bollywood&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE Kannada&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Marathi&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Marudhara&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE NEWS&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Punjab Haryana Himachal&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Studio&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Studio HD&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee Talkies&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;ZEE Telugu&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zee TV&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zing&quot;' />
            <groupfilter function='member' level='[Name of channel]' member='&quot;Zoom&quot;' />
          </groupfilter>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.455969' measure-ordering='alphabetic' measure-percentage='0.544031' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Channel Advt' name='textscan.0pwphad0b2mfz412wl39v0w1r0p4' />
          </datasources>
          <datasource-dependencies datasource='textscan.0pwphad0b2mfz412wl39v0w1r0p4'>
            <column caption='Avg duration per hour of Advt during peak hour in min' datatype='real' name='[ Avg duration per hour of Advt during peak hour in min]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name of channel]' role='dimension' type='nominal' />
            <column-instance column='[Name of channel]' derivation='None' name='[none:Name of channel:nk]' pivot='key' type='nominal' />
            <column-instance column='[ Avg duration per hour of Advt during peak hour in min]' derivation='Sum' name='[sum: Avg duration per hour of Advt during peak hour in min:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' max='20.989999999999998' min='12.130000000000001' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' />
              <color column='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' />
              <text column='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[none:Name of channel:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='normal' />
                <format attr='font-size' value='8' />
                <format attr='font-family' value='Calibri Light' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Story Title</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7995' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='17782' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='7995' />
            <zone h='73570' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='25777'>
              <flipboard active-id='1' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Sheet 1' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='32'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[sum: Avg duration per hour of Advt during peak hour in min:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0pwphad0b2mfz412wl39v0w1r0p4].[none:Name of channel:nk]</field>
            <field>[textscan.0uhm4wf0ngkban19lp0mr1emn9pz].[none:Name of Pay Channel (Non News):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
